[
    {
        "check_type": "dockerfile",
        "results": {
            "passed_checks": [
                {
                    "check_id": "CKV_DOCKER_11",
                    "bc_check_id": "BC_DKR_GENERAL_9",
                    "check_name": "Ensure From Alias are unique for multistage builds.",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": null
                    },
                    "code_block": [
                        [
                            1,
                            "# FROM super-sast, copy-paste the Dockerfile is better?\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "FROM ghcr.io/par-tec/super-sast as super-sast\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "FROM python:3.11.1-alpine as base_python\n"
                        ],
                        [
                            6,
                            "COPY --from=super-sast / /\n"
                        ],
                        [
                            7,
                            "# RUN apt-get update\n"
                        ],
                        [
                            8,
                            "ADD main.py /\n"
                        ],
                        [
                            9,
                            "ADD entrypoint.sh /\n"
                        ],
                        [
                            10,
                            "ADD sast_to_log.py /\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ],
                        [
                            13,
                            "ADD parse_scripts/* /parse_scripts\n"
                        ],
                        [
                            14,
                            "ADD request.py /\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ],
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ],
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ],
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "ENTRYPOINT [\"/entrypoint.sh\"]"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "/Dockerfile.",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.AliasIsUnique",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-from-alias-is-unique-for-multistage-builds",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_5",
                    "bc_check_id": "BC_DKR_4",
                    "check_name": "Ensure update instructions are not use alone in the Dockerfile",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": null
                    },
                    "code_block": [
                        [
                            1,
                            "# FROM super-sast, copy-paste the Dockerfile is better?\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "FROM ghcr.io/par-tec/super-sast as super-sast\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "FROM python:3.11.1-alpine as base_python\n"
                        ],
                        [
                            6,
                            "COPY --from=super-sast / /\n"
                        ],
                        [
                            7,
                            "# RUN apt-get update\n"
                        ],
                        [
                            8,
                            "ADD main.py /\n"
                        ],
                        [
                            9,
                            "ADD entrypoint.sh /\n"
                        ],
                        [
                            10,
                            "ADD sast_to_log.py /\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ],
                        [
                            13,
                            "ADD parse_scripts/* /parse_scripts\n"
                        ],
                        [
                            14,
                            "ADD request.py /\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ],
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ],
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ],
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "ENTRYPOINT [\"/entrypoint.sh\"]"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "/Dockerfile.",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.UpdateNotAlone",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-update-instructions-are-not-used-alone-in-the-dockerfile",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_9",
                    "bc_check_id": "BC_DKR_NETWORKING_1",
                    "check_name": "Ensure that APT isn't used",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": null
                    },
                    "code_block": [
                        [
                            1,
                            "# FROM super-sast, copy-paste the Dockerfile is better?\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "FROM ghcr.io/par-tec/super-sast as super-sast\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "FROM python:3.11.1-alpine as base_python\n"
                        ],
                        [
                            6,
                            "COPY --from=super-sast / /\n"
                        ],
                        [
                            7,
                            "# RUN apt-get update\n"
                        ],
                        [
                            8,
                            "ADD main.py /\n"
                        ],
                        [
                            9,
                            "ADD entrypoint.sh /\n"
                        ],
                        [
                            10,
                            "ADD sast_to_log.py /\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ],
                        [
                            13,
                            "ADD parse_scripts/* /parse_scripts\n"
                        ],
                        [
                            14,
                            "ADD request.py /\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ],
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ],
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ],
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "ENTRYPOINT [\"/entrypoint.sh\"]"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "/Dockerfile.",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.RunUsingAPT",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-is-not-used",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_1",
                    "bc_check_id": null,
                    "check_name": "Ensure that sudo isn't used",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN mkdir parse_scripts\n",
                                "value": "mkdir parse_scripts",
                                "__startline__": 11,
                                "__endline__": 11
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN mkdir parse_scripts\n",
                            "value": "mkdir parse_scripts",
                            "__startline__": 11,
                            "__endline__": 11,
                            "resource_type": "RUN",
                            "hash": "f8de17aa1bf55c2e1c04464a529b1b5f5e273f045e0a507ce2214564f2573724"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        12,
                        12
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_1",
                    "bc_check_id": null,
                    "check_name": "Ensure that sudo isn't used",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /entrypoint.sh\n",
                                "value": "chmod +x /entrypoint.sh",
                                "__startline__": 15,
                                "__endline__": 15
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /entrypoint.sh\n",
                            "value": "chmod +x /entrypoint.sh",
                            "__startline__": 15,
                            "__endline__": 15,
                            "resource_type": "RUN",
                            "hash": "a702f05c50c9ee7b58d9e35ce6d20aa9a0f2f35669e8fd8ef944fe8307f212b0"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        16,
                        16
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_1",
                    "bc_check_id": null,
                    "check_name": "Ensure that sudo isn't used",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /sast_to_log.py\n",
                                "value": "chmod +x /sast_to_log.py",
                                "__startline__": 16,
                                "__endline__": 16
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /sast_to_log.py\n",
                            "value": "chmod +x /sast_to_log.py",
                            "__startline__": 16,
                            "__endline__": 16,
                            "resource_type": "RUN",
                            "hash": "e1561444575007e90036636793c118559cc46f45097884a3ec0dce406ce085c6"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        17,
                        17
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_1",
                    "bc_check_id": null,
                    "check_name": "Ensure that sudo isn't used",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /parse_scripts/*\n",
                                "value": "chmod +x /parse_scripts/*",
                                "__startline__": 17,
                                "__endline__": 17
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /parse_scripts/*\n",
                            "value": "chmod +x /parse_scripts/*",
                            "__startline__": 17,
                            "__endline__": 17,
                            "resource_type": "RUN",
                            "hash": "1e4d82b83de7562e652898d9f91912372434dc57f5b14b0a72c6521c47316e57"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        18,
                        18
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_1",
                    "bc_check_id": null,
                    "check_name": "Ensure that sudo isn't used",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /main.py\n",
                                "value": "chmod +x /main.py",
                                "__startline__": 18,
                                "__endline__": 18
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /main.py\n",
                            "value": "chmod +x /main.py",
                            "__startline__": 18,
                            "__endline__": 18,
                            "resource_type": "RUN",
                            "hash": "fc9ee02fbfb6fa1715aabc8243b49b4a8bf659c2ff798a98d7ff98ebb7147407"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        19,
                        19
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_5",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN mkdir parse_scripts\n",
                                "value": "mkdir parse_scripts",
                                "__startline__": 11,
                                "__endline__": 11
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN mkdir parse_scripts\n",
                            "value": "mkdir parse_scripts",
                            "__startline__": 11,
                            "__endline__": 11,
                            "resource_type": "RUN",
                            "hash": "f8de17aa1bf55c2e1c04464a529b1b5f5e273f045e0a507ce2214564f2573724"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        12,
                        12
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_5",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /entrypoint.sh\n",
                                "value": "chmod +x /entrypoint.sh",
                                "__startline__": 15,
                                "__endline__": 15
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /entrypoint.sh\n",
                            "value": "chmod +x /entrypoint.sh",
                            "__startline__": 15,
                            "__endline__": 15,
                            "resource_type": "RUN",
                            "hash": "a702f05c50c9ee7b58d9e35ce6d20aa9a0f2f35669e8fd8ef944fe8307f212b0"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        16,
                        16
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_5",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /sast_to_log.py\n",
                                "value": "chmod +x /sast_to_log.py",
                                "__startline__": 16,
                                "__endline__": 16
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /sast_to_log.py\n",
                            "value": "chmod +x /sast_to_log.py",
                            "__startline__": 16,
                            "__endline__": 16,
                            "resource_type": "RUN",
                            "hash": "e1561444575007e90036636793c118559cc46f45097884a3ec0dce406ce085c6"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        17,
                        17
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_5",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /parse_scripts/*\n",
                                "value": "chmod +x /parse_scripts/*",
                                "__startline__": 17,
                                "__endline__": 17
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /parse_scripts/*\n",
                            "value": "chmod +x /parse_scripts/*",
                            "__startline__": 17,
                            "__endline__": 17,
                            "resource_type": "RUN",
                            "hash": "1e4d82b83de7562e652898d9f91912372434dc57f5b14b0a72c6521c47316e57"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        18,
                        18
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_5",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /main.py\n",
                                "value": "chmod +x /main.py",
                                "__startline__": 18,
                                "__endline__": 18
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /main.py\n",
                            "value": "chmod +x /main.py",
                            "__startline__": 18,
                            "__endline__": 18,
                            "resource_type": "RUN",
                            "hash": "fc9ee02fbfb6fa1715aabc8243b49b4a8bf659c2ff798a98d7ff98ebb7147407"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        19,
                        19
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_6",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN mkdir parse_scripts\n",
                                "value": "mkdir parse_scripts",
                                "__startline__": 11,
                                "__endline__": 11
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN mkdir parse_scripts\n",
                            "value": "mkdir parse_scripts",
                            "__startline__": 11,
                            "__endline__": 11,
                            "resource_type": "RUN",
                            "hash": "f8de17aa1bf55c2e1c04464a529b1b5f5e273f045e0a507ce2214564f2573724"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        12,
                        12
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_6",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /entrypoint.sh\n",
                                "value": "chmod +x /entrypoint.sh",
                                "__startline__": 15,
                                "__endline__": 15
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /entrypoint.sh\n",
                            "value": "chmod +x /entrypoint.sh",
                            "__startline__": 15,
                            "__endline__": 15,
                            "resource_type": "RUN",
                            "hash": "a702f05c50c9ee7b58d9e35ce6d20aa9a0f2f35669e8fd8ef944fe8307f212b0"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        16,
                        16
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_6",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /sast_to_log.py\n",
                                "value": "chmod +x /sast_to_log.py",
                                "__startline__": 16,
                                "__endline__": 16
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /sast_to_log.py\n",
                            "value": "chmod +x /sast_to_log.py",
                            "__startline__": 16,
                            "__endline__": 16,
                            "resource_type": "RUN",
                            "hash": "e1561444575007e90036636793c118559cc46f45097884a3ec0dce406ce085c6"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        17,
                        17
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_6",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /parse_scripts/*\n",
                                "value": "chmod +x /parse_scripts/*",
                                "__startline__": 17,
                                "__endline__": 17
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /parse_scripts/*\n",
                            "value": "chmod +x /parse_scripts/*",
                            "__startline__": 17,
                            "__endline__": 17,
                            "resource_type": "RUN",
                            "hash": "1e4d82b83de7562e652898d9f91912372434dc57f5b14b0a72c6521c47316e57"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        18,
                        18
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_6",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /main.py\n",
                                "value": "chmod +x /main.py",
                                "__startline__": 18,
                                "__endline__": 18
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /main.py\n",
                            "value": "chmod +x /main.py",
                            "__startline__": 18,
                            "__endline__": 18,
                            "resource_type": "RUN",
                            "hash": "fc9ee02fbfb6fa1715aabc8243b49b4a8bf659c2ff798a98d7ff98ebb7147407"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        19,
                        19
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_2",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with curl",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN mkdir parse_scripts\n",
                                "value": "mkdir parse_scripts",
                                "__startline__": 11,
                                "__endline__": 11
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN mkdir parse_scripts\n",
                            "value": "mkdir parse_scripts",
                            "__startline__": 11,
                            "__endline__": 11,
                            "resource_type": "RUN",
                            "hash": "f8de17aa1bf55c2e1c04464a529b1b5f5e273f045e0a507ce2214564f2573724"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        12,
                        12
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_2",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with curl",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /entrypoint.sh\n",
                                "value": "chmod +x /entrypoint.sh",
                                "__startline__": 15,
                                "__endline__": 15
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /entrypoint.sh\n",
                            "value": "chmod +x /entrypoint.sh",
                            "__startline__": 15,
                            "__endline__": 15,
                            "resource_type": "RUN",
                            "hash": "a702f05c50c9ee7b58d9e35ce6d20aa9a0f2f35669e8fd8ef944fe8307f212b0"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        16,
                        16
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_2",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with curl",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /sast_to_log.py\n",
                                "value": "chmod +x /sast_to_log.py",
                                "__startline__": 16,
                                "__endline__": 16
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /sast_to_log.py\n",
                            "value": "chmod +x /sast_to_log.py",
                            "__startline__": 16,
                            "__endline__": 16,
                            "resource_type": "RUN",
                            "hash": "e1561444575007e90036636793c118559cc46f45097884a3ec0dce406ce085c6"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        17,
                        17
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_2",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with curl",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /parse_scripts/*\n",
                                "value": "chmod +x /parse_scripts/*",
                                "__startline__": 17,
                                "__endline__": 17
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /parse_scripts/*\n",
                            "value": "chmod +x /parse_scripts/*",
                            "__startline__": 17,
                            "__endline__": 17,
                            "resource_type": "RUN",
                            "hash": "1e4d82b83de7562e652898d9f91912372434dc57f5b14b0a72c6521c47316e57"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        18,
                        18
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_2",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with curl",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /main.py\n",
                                "value": "chmod +x /main.py",
                                "__startline__": 18,
                                "__endline__": 18
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /main.py\n",
                            "value": "chmod +x /main.py",
                            "__startline__": 18,
                            "__endline__": 18,
                            "resource_type": "RUN",
                            "hash": "fc9ee02fbfb6fa1715aabc8243b49b4a8bf659c2ff798a98d7ff98ebb7147407"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        19,
                        19
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_3",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with wget",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN mkdir parse_scripts\n",
                                "value": "mkdir parse_scripts",
                                "__startline__": 11,
                                "__endline__": 11
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN mkdir parse_scripts\n",
                            "value": "mkdir parse_scripts",
                            "__startline__": 11,
                            "__endline__": 11,
                            "resource_type": "RUN",
                            "hash": "f8de17aa1bf55c2e1c04464a529b1b5f5e273f045e0a507ce2214564f2573724"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        12,
                        12
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_3",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with wget",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /entrypoint.sh\n",
                                "value": "chmod +x /entrypoint.sh",
                                "__startline__": 15,
                                "__endline__": 15
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /entrypoint.sh\n",
                            "value": "chmod +x /entrypoint.sh",
                            "__startline__": 15,
                            "__endline__": 15,
                            "resource_type": "RUN",
                            "hash": "a702f05c50c9ee7b58d9e35ce6d20aa9a0f2f35669e8fd8ef944fe8307f212b0"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        16,
                        16
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_3",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with wget",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /sast_to_log.py\n",
                                "value": "chmod +x /sast_to_log.py",
                                "__startline__": 16,
                                "__endline__": 16
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /sast_to_log.py\n",
                            "value": "chmod +x /sast_to_log.py",
                            "__startline__": 16,
                            "__endline__": 16,
                            "resource_type": "RUN",
                            "hash": "e1561444575007e90036636793c118559cc46f45097884a3ec0dce406ce085c6"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        17,
                        17
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_3",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with wget",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /parse_scripts/*\n",
                                "value": "chmod +x /parse_scripts/*",
                                "__startline__": 17,
                                "__endline__": 17
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /parse_scripts/*\n",
                            "value": "chmod +x /parse_scripts/*",
                            "__startline__": 17,
                            "__endline__": 17,
                            "resource_type": "RUN",
                            "hash": "1e4d82b83de7562e652898d9f91912372434dc57f5b14b0a72c6521c47316e57"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        18,
                        18
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_3",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with wget",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /main.py\n",
                                "value": "chmod +x /main.py",
                                "__startline__": 18,
                                "__endline__": 18
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /main.py\n",
                            "value": "chmod +x /main.py",
                            "__startline__": 18,
                            "__endline__": 18,
                            "resource_type": "RUN",
                            "hash": "fc9ee02fbfb6fa1715aabc8243b49b4a8bf659c2ff798a98d7ff98ebb7147407"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        19,
                        19
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_4",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN mkdir parse_scripts\n",
                                "value": "mkdir parse_scripts",
                                "__startline__": 11,
                                "__endline__": 11
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN mkdir parse_scripts\n",
                            "value": "mkdir parse_scripts",
                            "__startline__": 11,
                            "__endline__": 11,
                            "resource_type": "RUN",
                            "hash": "f8de17aa1bf55c2e1c04464a529b1b5f5e273f045e0a507ce2214564f2573724"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        12,
                        12
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_4",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /entrypoint.sh\n",
                                "value": "chmod +x /entrypoint.sh",
                                "__startline__": 15,
                                "__endline__": 15
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /entrypoint.sh\n",
                            "value": "chmod +x /entrypoint.sh",
                            "__startline__": 15,
                            "__endline__": 15,
                            "resource_type": "RUN",
                            "hash": "a702f05c50c9ee7b58d9e35ce6d20aa9a0f2f35669e8fd8ef944fe8307f212b0"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        16,
                        16
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_4",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /sast_to_log.py\n",
                                "value": "chmod +x /sast_to_log.py",
                                "__startline__": 16,
                                "__endline__": 16
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /sast_to_log.py\n",
                            "value": "chmod +x /sast_to_log.py",
                            "__startline__": 16,
                            "__endline__": 16,
                            "resource_type": "RUN",
                            "hash": "e1561444575007e90036636793c118559cc46f45097884a3ec0dce406ce085c6"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        17,
                        17
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_4",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /parse_scripts/*\n",
                                "value": "chmod +x /parse_scripts/*",
                                "__startline__": 17,
                                "__endline__": 17
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /parse_scripts/*\n",
                            "value": "chmod +x /parse_scripts/*",
                            "__startline__": 17,
                            "__endline__": 17,
                            "resource_type": "RUN",
                            "hash": "1e4d82b83de7562e652898d9f91912372434dc57f5b14b0a72c6521c47316e57"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        18,
                        18
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV2_DOCKER_4",
                    "bc_check_id": null,
                    "check_name": "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "block_name_": "RUN",
                            "block_type_": "resource",
                            "file_path_": "/Dockerfile",
                            "config_": {
                                "content": "RUN chmod +x /main.py\n",
                                "value": "chmod +x /main.py",
                                "__startline__": 18,
                                "__endline__": 18
                            },
                            "label_": "resource: RUN",
                            "id_": "RUN",
                            "source_": "Dockerfile",
                            "content": "RUN chmod +x /main.py\n",
                            "value": "chmod +x /main.py",
                            "__startline__": 18,
                            "__endline__": 18,
                            "resource_type": "RUN",
                            "hash": "fc9ee02fbfb6fa1715aabc8243b49b4a8bf659c2ff798a98d7ff98ebb7147407"
                        },
                        "evaluated_keys": [
                            "value"
                        ]
                    },
                    "code_block": [
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        19,
                        19
                    ],
                    "resource": "/Dockerfile.RUN",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                }
            ],
            "failed_checks": [
                {
                    "check_id": "CKV_DOCKER_7",
                    "bc_check_id": "BC_DKR_7",
                    "check_name": "Ensure the base image uses a non latest version tag",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": [
                            {
                                "instruction": "FROM",
                                "startline": 2,
                                "endline": 2,
                                "content": "FROM ghcr.io/par-tec/super-sast as super-sast\n",
                                "value": "ghcr.io/par-tec/super-sast as super-sast"
                            }
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "FROM ghcr.io/par-tec/super-sast as super-sast\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        3,
                        3
                    ],
                    "resource": "/Dockerfile.FROM",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.ReferenceLatestTag",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-the-base-image-uses-a-non-latest-version-tag",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_4",
                    "bc_check_id": "BC_DKR_5",
                    "check_name": "Ensure that COPY is used instead of ADD in Dockerfiles",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": [
                            {
                                "instruction": "ADD",
                                "startline": 7,
                                "endline": 7,
                                "content": "ADD main.py /\n",
                                "value": "main.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 8,
                                "endline": 8,
                                "content": "ADD entrypoint.sh /\n",
                                "value": "entrypoint.sh /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 9,
                                "endline": 9,
                                "content": "ADD sast_to_log.py /\n",
                                "value": "sast_to_log.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 12,
                                "endline": 12,
                                "content": "ADD parse_scripts/* /parse_scripts\n",
                                "value": "parse_scripts/* /parse_scripts"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 13,
                                "endline": 13,
                                "content": "ADD request.py /\n",
                                "value": "request.py /"
                            }
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "ADD main.py /\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        8,
                        8
                    ],
                    "resource": "/Dockerfile.ADD",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.AddExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-copy-is-used-instead-of-add-in-dockerfiles",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_4",
                    "bc_check_id": "BC_DKR_5",
                    "check_name": "Ensure that COPY is used instead of ADD in Dockerfiles",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": [
                            {
                                "instruction": "ADD",
                                "startline": 7,
                                "endline": 7,
                                "content": "ADD main.py /\n",
                                "value": "main.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 8,
                                "endline": 8,
                                "content": "ADD entrypoint.sh /\n",
                                "value": "entrypoint.sh /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 9,
                                "endline": 9,
                                "content": "ADD sast_to_log.py /\n",
                                "value": "sast_to_log.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 12,
                                "endline": 12,
                                "content": "ADD parse_scripts/* /parse_scripts\n",
                                "value": "parse_scripts/* /parse_scripts"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 13,
                                "endline": 13,
                                "content": "ADD request.py /\n",
                                "value": "request.py /"
                            }
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "ADD entrypoint.sh /\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        9,
                        9
                    ],
                    "resource": "/Dockerfile.ADD",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.AddExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-copy-is-used-instead-of-add-in-dockerfiles",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_4",
                    "bc_check_id": "BC_DKR_5",
                    "check_name": "Ensure that COPY is used instead of ADD in Dockerfiles",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": [
                            {
                                "instruction": "ADD",
                                "startline": 7,
                                "endline": 7,
                                "content": "ADD main.py /\n",
                                "value": "main.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 8,
                                "endline": 8,
                                "content": "ADD entrypoint.sh /\n",
                                "value": "entrypoint.sh /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 9,
                                "endline": 9,
                                "content": "ADD sast_to_log.py /\n",
                                "value": "sast_to_log.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 12,
                                "endline": 12,
                                "content": "ADD parse_scripts/* /parse_scripts\n",
                                "value": "parse_scripts/* /parse_scripts"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 13,
                                "endline": 13,
                                "content": "ADD request.py /\n",
                                "value": "request.py /"
                            }
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "ADD sast_to_log.py /\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        10,
                        10
                    ],
                    "resource": "/Dockerfile.ADD",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.AddExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-copy-is-used-instead-of-add-in-dockerfiles",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_4",
                    "bc_check_id": "BC_DKR_5",
                    "check_name": "Ensure that COPY is used instead of ADD in Dockerfiles",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": [
                            {
                                "instruction": "ADD",
                                "startline": 7,
                                "endline": 7,
                                "content": "ADD main.py /\n",
                                "value": "main.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 8,
                                "endline": 8,
                                "content": "ADD entrypoint.sh /\n",
                                "value": "entrypoint.sh /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 9,
                                "endline": 9,
                                "content": "ADD sast_to_log.py /\n",
                                "value": "sast_to_log.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 12,
                                "endline": 12,
                                "content": "ADD parse_scripts/* /parse_scripts\n",
                                "value": "parse_scripts/* /parse_scripts"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 13,
                                "endline": 13,
                                "content": "ADD request.py /\n",
                                "value": "request.py /"
                            }
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "ADD parse_scripts/* /parse_scripts\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        13,
                        13
                    ],
                    "resource": "/Dockerfile.ADD",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.AddExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-copy-is-used-instead-of-add-in-dockerfiles",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_4",
                    "bc_check_id": "BC_DKR_5",
                    "check_name": "Ensure that COPY is used instead of ADD in Dockerfiles",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": [
                            {
                                "instruction": "ADD",
                                "startline": 7,
                                "endline": 7,
                                "content": "ADD main.py /\n",
                                "value": "main.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 8,
                                "endline": 8,
                                "content": "ADD entrypoint.sh /\n",
                                "value": "entrypoint.sh /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 9,
                                "endline": 9,
                                "content": "ADD sast_to_log.py /\n",
                                "value": "sast_to_log.py /"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 12,
                                "endline": 12,
                                "content": "ADD parse_scripts/* /parse_scripts\n",
                                "value": "parse_scripts/* /parse_scripts"
                            },
                            {
                                "instruction": "ADD",
                                "startline": 13,
                                "endline": 13,
                                "content": "ADD request.py /\n",
                                "value": "request.py /"
                            }
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "ADD request.py /\n"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        14,
                        14
                    ],
                    "resource": "/Dockerfile.ADD",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.AddExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-copy-is-used-instead-of-add-in-dockerfiles",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_3",
                    "bc_check_id": "BC_DKR_3",
                    "check_name": "Ensure that a user for the container has been created",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": null
                    },
                    "code_block": [
                        [
                            1,
                            "# FROM super-sast, copy-paste the Dockerfile is better?\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "FROM ghcr.io/par-tec/super-sast as super-sast\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "FROM python:3.11.1-alpine as base_python\n"
                        ],
                        [
                            6,
                            "COPY --from=super-sast / /\n"
                        ],
                        [
                            7,
                            "# RUN apt-get update\n"
                        ],
                        [
                            8,
                            "ADD main.py /\n"
                        ],
                        [
                            9,
                            "ADD entrypoint.sh /\n"
                        ],
                        [
                            10,
                            "ADD sast_to_log.py /\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ],
                        [
                            13,
                            "ADD parse_scripts/* /parse_scripts\n"
                        ],
                        [
                            14,
                            "ADD request.py /\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ],
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ],
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ],
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "ENTRYPOINT [\"/entrypoint.sh\"]"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "/Dockerfile.",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.UserExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_2",
                    "bc_check_id": "BC_DKR_2",
                    "check_name": "Ensure that HEALTHCHECK instructions have been added to container images",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": null
                    },
                    "code_block": [
                        [
                            1,
                            "# FROM super-sast, copy-paste the Dockerfile is better?\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "FROM ghcr.io/par-tec/super-sast as super-sast\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "FROM python:3.11.1-alpine as base_python\n"
                        ],
                        [
                            6,
                            "COPY --from=super-sast / /\n"
                        ],
                        [
                            7,
                            "# RUN apt-get update\n"
                        ],
                        [
                            8,
                            "ADD main.py /\n"
                        ],
                        [
                            9,
                            "ADD entrypoint.sh /\n"
                        ],
                        [
                            10,
                            "ADD sast_to_log.py /\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "RUN mkdir parse_scripts\n"
                        ],
                        [
                            13,
                            "ADD parse_scripts/* /parse_scripts\n"
                        ],
                        [
                            14,
                            "ADD request.py /\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "RUN chmod +x /entrypoint.sh\n"
                        ],
                        [
                            17,
                            "RUN chmod +x /sast_to_log.py\n"
                        ],
                        [
                            18,
                            "RUN chmod +x /parse_scripts/*\n"
                        ],
                        [
                            19,
                            "RUN chmod +x /main.py\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "ENTRYPOINT [\"/entrypoint.sh\"]"
                        ]
                    ],
                    "file_path": "/Dockerfile",
                    "file_abs_path": "/code/Dockerfile",
                    "repo_file_path": "/Dockerfile",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "/Dockerfile.",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.HealthcheckExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                }
            ],
            "skipped_checks": [],
            "parsing_errors": []
        },
        "summary": {
            "passed": 33,
            "failed": 8,
            "skipped": 0,
            "parsing_errors": 0,
            "resource_count": 1,
            "checkov_version": "2.2.327"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    },
    {
        "check_type": "github_actions",
        "results": {
            "passed_checks": [
                {
                    "check_id": "CKV_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "runs-on": "ubuntu-latest",
                            "env": {
                                "GITHUB_API_URL": "${{ github.api_url }}",
                                "GITHUB_REPOSITORY": "${{ github.repository }}",
                                "GITHUB_SHA": "${{ github.sha }}",
                                "__startline__": 10,
                                "__endline__": 13
                            },
                            "strategy": {
                                "matrix": {
                                    "os": [
                                        "ubuntu-latest"
                                    ],
                                    "python-version": [
                                        "3.7"
                                    ],
                                    "__startline__": 15,
                                    "__endline__": 17
                                },
                                "__startline__": 14,
                                "__endline__": 17
                            },
                            "name": "Python ${{ matrix.python-version }} ${{ matrix.os }}",
                            "steps": [
                                {
                                    "name": "GitHub env variables",
                                    "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                                    "__startline__": 20,
                                    "__endline__": 25
                                },
                                {
                                    "uses": "actions/checkout@v2",
                                    "__startline__": 25,
                                    "__endline__": 27
                                },
                                {
                                    "name": "Build Docker image",
                                    "run": "docker build -t super-sast-action:0.4 .",
                                    "__startline__": 27,
                                    "__endline__": 30
                                },
                                {
                                    "name": "Run Docker Image",
                                    "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                                    "__startline__": 30,
                                    "__endline__": 34
                                },
                                {
                                    "uses": "actions/upload-artifact@v3",
                                    "with": {
                                        "name": "super-sast-artifact",
                                        "path": "super-sast.log\nlog_dir/\n",
                                        "__startline__": 36,
                                        "__endline__": 40
                                    },
                                    "__startline__": 34,
                                    "__endline__": 40
                                }
                            ],
                            "__startline__": 7,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            7,
                            "    runs-on: ubuntu-latest\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "    env:\n"
                        ],
                        [
                            10,
                            "      GITHUB_API_URL: ${{ github.api_url }}\n"
                        ],
                        [
                            11,
                            "      GITHUB_REPOSITORY: ${{ github.repository }}\n"
                        ],
                        [
                            12,
                            "      GITHUB_SHA: ${{ github.sha }}\n"
                        ],
                        [
                            13,
                            "    strategy:\n"
                        ],
                        [
                            14,
                            "      matrix:\n"
                        ],
                        [
                            15,
                            "        os: [ ubuntu-latest ]\n"
                        ],
                        [
                            16,
                            "        python-version: [ '3.7' ]\n"
                        ],
                        [
                            17,
                            "    name: Python ${{ matrix.python-version }} ${{ matrix.os }}\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "    steps:\n"
                        ],
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        7,
                        41
                    ],
                    "resource": "jobs(build)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_3",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of curl with secrets",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "runs-on": "ubuntu-latest",
                            "env": {
                                "GITHUB_API_URL": "${{ github.api_url }}",
                                "GITHUB_REPOSITORY": "${{ github.repository }}",
                                "GITHUB_SHA": "${{ github.sha }}",
                                "__startline__": 10,
                                "__endline__": 13
                            },
                            "strategy": {
                                "matrix": {
                                    "os": [
                                        "ubuntu-latest"
                                    ],
                                    "python-version": [
                                        "3.7"
                                    ],
                                    "__startline__": 15,
                                    "__endline__": 17
                                },
                                "__startline__": 14,
                                "__endline__": 17
                            },
                            "name": "Python ${{ matrix.python-version }} ${{ matrix.os }}",
                            "steps": [
                                {
                                    "name": "GitHub env variables",
                                    "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                                    "__startline__": 20,
                                    "__endline__": 25
                                },
                                {
                                    "uses": "actions/checkout@v2",
                                    "__startline__": 25,
                                    "__endline__": 27
                                },
                                {
                                    "name": "Build Docker image",
                                    "run": "docker build -t super-sast-action:0.4 .",
                                    "__startline__": 27,
                                    "__endline__": 30
                                },
                                {
                                    "name": "Run Docker Image",
                                    "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                                    "__startline__": 30,
                                    "__endline__": 34
                                },
                                {
                                    "uses": "actions/upload-artifact@v3",
                                    "with": {
                                        "name": "super-sast-artifact",
                                        "path": "super-sast.log\nlog_dir/\n",
                                        "__startline__": 36,
                                        "__endline__": 40
                                    },
                                    "__startline__": 34,
                                    "__endline__": 40
                                }
                            ],
                            "__startline__": 7,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            7,
                            "    runs-on: ubuntu-latest\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "    env:\n"
                        ],
                        [
                            10,
                            "      GITHUB_API_URL: ${{ github.api_url }}\n"
                        ],
                        [
                            11,
                            "      GITHUB_REPOSITORY: ${{ github.repository }}\n"
                        ],
                        [
                            12,
                            "      GITHUB_SHA: ${{ github.sha }}\n"
                        ],
                        [
                            13,
                            "    strategy:\n"
                        ],
                        [
                            14,
                            "      matrix:\n"
                        ],
                        [
                            15,
                            "        os: [ ubuntu-latest ]\n"
                        ],
                        [
                            16,
                            "        python-version: [ '3.7' ]\n"
                        ],
                        [
                            17,
                            "    name: Python ${{ matrix.python-version }} ${{ matrix.os }}\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "    steps:\n"
                        ],
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        7,
                        41
                    ],
                    "resource": "jobs(build)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_4",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of netcat with IP address",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "runs-on": "ubuntu-latest",
                            "env": {
                                "GITHUB_API_URL": "${{ github.api_url }}",
                                "GITHUB_REPOSITORY": "${{ github.repository }}",
                                "GITHUB_SHA": "${{ github.sha }}",
                                "__startline__": 10,
                                "__endline__": 13
                            },
                            "strategy": {
                                "matrix": {
                                    "os": [
                                        "ubuntu-latest"
                                    ],
                                    "python-version": [
                                        "3.7"
                                    ],
                                    "__startline__": 15,
                                    "__endline__": 17
                                },
                                "__startline__": 14,
                                "__endline__": 17
                            },
                            "name": "Python ${{ matrix.python-version }} ${{ matrix.os }}",
                            "steps": [
                                {
                                    "name": "GitHub env variables",
                                    "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                                    "__startline__": 20,
                                    "__endline__": 25
                                },
                                {
                                    "uses": "actions/checkout@v2",
                                    "__startline__": 25,
                                    "__endline__": 27
                                },
                                {
                                    "name": "Build Docker image",
                                    "run": "docker build -t super-sast-action:0.4 .",
                                    "__startline__": 27,
                                    "__endline__": 30
                                },
                                {
                                    "name": "Run Docker Image",
                                    "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                                    "__startline__": 30,
                                    "__endline__": 34
                                },
                                {
                                    "uses": "actions/upload-artifact@v3",
                                    "with": {
                                        "name": "super-sast-artifact",
                                        "path": "super-sast.log\nlog_dir/\n",
                                        "__startline__": 36,
                                        "__endline__": 40
                                    },
                                    "__startline__": 34,
                                    "__endline__": 40
                                }
                            ],
                            "__startline__": 7,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            7,
                            "    runs-on: ubuntu-latest\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "    env:\n"
                        ],
                        [
                            10,
                            "      GITHUB_API_URL: ${{ github.api_url }}\n"
                        ],
                        [
                            11,
                            "      GITHUB_REPOSITORY: ${{ github.repository }}\n"
                        ],
                        [
                            12,
                            "      GITHUB_SHA: ${{ github.sha }}\n"
                        ],
                        [
                            13,
                            "    strategy:\n"
                        ],
                        [
                            14,
                            "      matrix:\n"
                        ],
                        [
                            15,
                            "        os: [ ubuntu-latest ]\n"
                        ],
                        [
                            16,
                            "        python-version: [ '3.7' ]\n"
                        ],
                        [
                            17,
                            "    name: Python ${{ matrix.python-version }} ${{ matrix.os }}\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "    steps:\n"
                        ],
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        7,
                        41
                    ],
                    "resource": "jobs(build)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_2",
                    "bc_check_id": null,
                    "check_name": "Ensure run commands are not vulnerable to shell injection",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "runs-on": "ubuntu-latest",
                            "env": {
                                "GITHUB_API_URL": "${{ github.api_url }}",
                                "GITHUB_REPOSITORY": "${{ github.repository }}",
                                "GITHUB_SHA": "${{ github.sha }}",
                                "__startline__": 10,
                                "__endline__": 13
                            },
                            "strategy": {
                                "matrix": {
                                    "os": [
                                        "ubuntu-latest"
                                    ],
                                    "python-version": [
                                        "3.7"
                                    ],
                                    "__startline__": 15,
                                    "__endline__": 17
                                },
                                "__startline__": 14,
                                "__endline__": 17
                            },
                            "name": "Python ${{ matrix.python-version }} ${{ matrix.os }}",
                            "steps": [
                                {
                                    "name": "GitHub env variables",
                                    "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                                    "__startline__": 20,
                                    "__endline__": 25
                                },
                                {
                                    "uses": "actions/checkout@v2",
                                    "__startline__": 25,
                                    "__endline__": 27
                                },
                                {
                                    "name": "Build Docker image",
                                    "run": "docker build -t super-sast-action:0.4 .",
                                    "__startline__": 27,
                                    "__endline__": 30
                                },
                                {
                                    "name": "Run Docker Image",
                                    "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                                    "__startline__": 30,
                                    "__endline__": 34
                                },
                                {
                                    "uses": "actions/upload-artifact@v3",
                                    "with": {
                                        "name": "super-sast-artifact",
                                        "path": "super-sast.log\nlog_dir/\n",
                                        "__startline__": 36,
                                        "__endline__": 40
                                    },
                                    "__startline__": 34,
                                    "__endline__": 40
                                }
                            ],
                            "__startline__": 7,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            7,
                            "    runs-on: ubuntu-latest\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "    env:\n"
                        ],
                        [
                            10,
                            "      GITHUB_API_URL: ${{ github.api_url }}\n"
                        ],
                        [
                            11,
                            "      GITHUB_REPOSITORY: ${{ github.repository }}\n"
                        ],
                        [
                            12,
                            "      GITHUB_SHA: ${{ github.sha }}\n"
                        ],
                        [
                            13,
                            "    strategy:\n"
                        ],
                        [
                            14,
                            "      matrix:\n"
                        ],
                        [
                            15,
                            "        os: [ ubuntu-latest ]\n"
                        ],
                        [
                            16,
                            "        python-version: [ '3.7' ]\n"
                        ],
                        [
                            17,
                            "    name: Python ${{ matrix.python-version }} ${{ matrix.os }}\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "    steps:\n"
                        ],
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        7,
                        41
                    ],
                    "resource": "jobs(build)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ShellInjection",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_5",
                    "bc_check_id": null,
                    "check_name": "Found artifact build without evidence of cosign sign execution in pipeline",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "build": {
                                "runs-on": "ubuntu-latest",
                                "env": {
                                    "GITHUB_API_URL": "${{ github.api_url }}",
                                    "GITHUB_REPOSITORY": "${{ github.repository }}",
                                    "GITHUB_SHA": "${{ github.sha }}",
                                    "__startline__": 10,
                                    "__endline__": 13
                                },
                                "strategy": {
                                    "matrix": {
                                        "os": [
                                            "ubuntu-latest"
                                        ],
                                        "python-version": [
                                            "3.7"
                                        ],
                                        "__startline__": 15,
                                        "__endline__": 17
                                    },
                                    "__startline__": 14,
                                    "__endline__": 17
                                },
                                "name": "Python ${{ matrix.python-version }} ${{ matrix.os }}",
                                "steps": [
                                    {
                                        "name": "GitHub env variables",
                                        "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                                        "__startline__": 20,
                                        "__endline__": 25
                                    },
                                    {
                                        "uses": "actions/checkout@v2",
                                        "__startline__": 25,
                                        "__endline__": 27
                                    },
                                    {
                                        "name": "Build Docker image",
                                        "run": "docker build -t super-sast-action:0.4 .",
                                        "__startline__": 27,
                                        "__endline__": 30
                                    },
                                    {
                                        "name": "Run Docker Image",
                                        "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                                        "__startline__": 30,
                                        "__endline__": 34
                                    },
                                    {
                                        "uses": "actions/upload-artifact@v3",
                                        "with": {
                                            "name": "super-sast-artifact",
                                            "path": "super-sast.log\nlog_dir/\n",
                                            "__startline__": 36,
                                            "__endline__": 40
                                        },
                                        "__startline__": 34,
                                        "__endline__": 40
                                    }
                                ],
                                "__startline__": 7,
                                "__endline__": 40
                            },
                            "__startline__": 6,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            6,
                            "  build:\n"
                        ],
                        [
                            7,
                            "    runs-on: ubuntu-latest\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "    env:\n"
                        ],
                        [
                            10,
                            "      GITHUB_API_URL: ${{ github.api_url }}\n"
                        ],
                        [
                            11,
                            "      GITHUB_REPOSITORY: ${{ github.repository }}\n"
                        ],
                        [
                            12,
                            "      GITHUB_SHA: ${{ github.sha }}\n"
                        ],
                        [
                            13,
                            "    strategy:\n"
                        ],
                        [
                            14,
                            "      matrix:\n"
                        ],
                        [
                            15,
                            "        os: [ ubuntu-latest ]\n"
                        ],
                        [
                            16,
                            "        python-version: [ '3.7' ]\n"
                        ],
                        [
                            17,
                            "    name: Python ${{ matrix.python-version }} ${{ matrix.os }}\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "    steps:\n"
                        ],
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        6,
                        41
                    ],
                    "resource": "jobs",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.CosignArtifacts",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_6",
                    "bc_check_id": null,
                    "check_name": "Found artifact build without evidence of cosign sbom attestation in pipeline",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "build": {
                                "runs-on": "ubuntu-latest",
                                "env": {
                                    "GITHUB_API_URL": "${{ github.api_url }}",
                                    "GITHUB_REPOSITORY": "${{ github.repository }}",
                                    "GITHUB_SHA": "${{ github.sha }}",
                                    "__startline__": 10,
                                    "__endline__": 13
                                },
                                "strategy": {
                                    "matrix": {
                                        "os": [
                                            "ubuntu-latest"
                                        ],
                                        "python-version": [
                                            "3.7"
                                        ],
                                        "__startline__": 15,
                                        "__endline__": 17
                                    },
                                    "__startline__": 14,
                                    "__endline__": 17
                                },
                                "name": "Python ${{ matrix.python-version }} ${{ matrix.os }}",
                                "steps": [
                                    {
                                        "name": "GitHub env variables",
                                        "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                                        "__startline__": 20,
                                        "__endline__": 25
                                    },
                                    {
                                        "uses": "actions/checkout@v2",
                                        "__startline__": 25,
                                        "__endline__": 27
                                    },
                                    {
                                        "name": "Build Docker image",
                                        "run": "docker build -t super-sast-action:0.4 .",
                                        "__startline__": 27,
                                        "__endline__": 30
                                    },
                                    {
                                        "name": "Run Docker Image",
                                        "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                                        "__startline__": 30,
                                        "__endline__": 34
                                    },
                                    {
                                        "uses": "actions/upload-artifact@v3",
                                        "with": {
                                            "name": "super-sast-artifact",
                                            "path": "super-sast.log\nlog_dir/\n",
                                            "__startline__": 36,
                                            "__endline__": 40
                                        },
                                        "__startline__": 34,
                                        "__endline__": 40
                                    }
                                ],
                                "__startline__": 7,
                                "__endline__": 40
                            },
                            "__startline__": 6,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            6,
                            "  build:\n"
                        ],
                        [
                            7,
                            "    runs-on: ubuntu-latest\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "    env:\n"
                        ],
                        [
                            10,
                            "      GITHUB_API_URL: ${{ github.api_url }}\n"
                        ],
                        [
                            11,
                            "      GITHUB_REPOSITORY: ${{ github.repository }}\n"
                        ],
                        [
                            12,
                            "      GITHUB_SHA: ${{ github.sha }}\n"
                        ],
                        [
                            13,
                            "    strategy:\n"
                        ],
                        [
                            14,
                            "      matrix:\n"
                        ],
                        [
                            15,
                            "        os: [ ubuntu-latest ]\n"
                        ],
                        [
                            16,
                            "        python-version: [ '3.7' ]\n"
                        ],
                        [
                            17,
                            "    name: Python ${{ matrix.python-version }} ${{ matrix.os }}\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "    steps:\n"
                        ],
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        6,
                        41
                    ],
                    "resource": "jobs",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.CosignSBOM",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "GitHub env variables",
                            "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                            "__startline__": 20,
                            "__endline__": 25
                        }
                    },
                    "code_block": [
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        20,
                        26
                    ],
                    "resource": "jobs(build).steps[1](GitHub env variables)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/checkout@v2",
                            "__startline__": 25,
                            "__endline__": 27
                        }
                    },
                    "code_block": [
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        25,
                        28
                    ],
                    "resource": "jobs(build).steps[2]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Build Docker image",
                            "run": "docker build -t super-sast-action:0.4 .",
                            "__startline__": 27,
                            "__endline__": 30
                        }
                    },
                    "code_block": [
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        27,
                        31
                    ],
                    "resource": "jobs(build).steps[3](Build Docker image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Run Docker Image",
                            "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                            "__startline__": 30,
                            "__endline__": 34
                        }
                    },
                    "code_block": [
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        30,
                        35
                    ],
                    "resource": "jobs(build).steps[4](Run Docker Image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/upload-artifact@v3",
                            "with": {
                                "name": "super-sast-artifact",
                                "path": "super-sast.log\nlog_dir/\n",
                                "__startline__": 36,
                                "__endline__": 40
                            },
                            "__startline__": 34,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        34,
                        41
                    ],
                    "resource": "jobs(build).steps[5]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.AllowUnsecureCommandsOnJob",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_3",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of curl with secrets",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "GitHub env variables",
                            "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                            "__startline__": 20,
                            "__endline__": 25
                        }
                    },
                    "code_block": [
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        20,
                        26
                    ],
                    "resource": "jobs(build).steps[1](GitHub env variables)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_3",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of curl with secrets",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/checkout@v2",
                            "__startline__": 25,
                            "__endline__": 27
                        }
                    },
                    "code_block": [
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        25,
                        28
                    ],
                    "resource": "jobs(build).steps[2]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_3",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of curl with secrets",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Build Docker image",
                            "run": "docker build -t super-sast-action:0.4 .",
                            "__startline__": 27,
                            "__endline__": 30
                        }
                    },
                    "code_block": [
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        27,
                        31
                    ],
                    "resource": "jobs(build).steps[3](Build Docker image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_3",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of curl with secrets",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Run Docker Image",
                            "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                            "__startline__": 30,
                            "__endline__": 34
                        }
                    },
                    "code_block": [
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        30,
                        35
                    ],
                    "resource": "jobs(build).steps[4](Run Docker Image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_3",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of curl with secrets",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/upload-artifact@v3",
                            "with": {
                                "name": "super-sast-artifact",
                                "path": "super-sast.log\nlog_dir/\n",
                                "__startline__": 36,
                                "__endline__": 40
                            },
                            "__startline__": 34,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        34,
                        41
                    ],
                    "resource": "jobs(build).steps[5]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.SuspectCurlInScript",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_4",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of netcat with IP address",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "GitHub env variables",
                            "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                            "__startline__": 20,
                            "__endline__": 25
                        }
                    },
                    "code_block": [
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        20,
                        26
                    ],
                    "resource": "jobs(build).steps[1](GitHub env variables)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_4",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of netcat with IP address",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/checkout@v2",
                            "__startline__": 25,
                            "__endline__": 27
                        }
                    },
                    "code_block": [
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        25,
                        28
                    ],
                    "resource": "jobs(build).steps[2]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_4",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of netcat with IP address",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Build Docker image",
                            "run": "docker build -t super-sast-action:0.4 .",
                            "__startline__": 27,
                            "__endline__": 30
                        }
                    },
                    "code_block": [
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        27,
                        31
                    ],
                    "resource": "jobs(build).steps[3](Build Docker image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_4",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of netcat with IP address",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Run Docker Image",
                            "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                            "__startline__": 30,
                            "__endline__": 34
                        }
                    },
                    "code_block": [
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        30,
                        35
                    ],
                    "resource": "jobs(build).steps[4](Run Docker Image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_4",
                    "bc_check_id": null,
                    "check_name": "Suspicious use of netcat with IP address",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/upload-artifact@v3",
                            "with": {
                                "name": "super-sast-artifact",
                                "path": "super-sast.log\nlog_dir/\n",
                                "__startline__": 36,
                                "__endline__": 40
                            },
                            "__startline__": 34,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        34,
                        41
                    ],
                    "resource": "jobs(build).steps[5]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ReverseShellNetcat",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_2",
                    "bc_check_id": null,
                    "check_name": "Ensure run commands are not vulnerable to shell injection",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "GitHub env variables",
                            "run": "echo \"$GITHUB_API_URL\"\necho \"$GITHUB_REPOSITORY\"\necho \"$GITHUB_SHA\"\n",
                            "__startline__": 20,
                            "__endline__": 25
                        }
                    },
                    "code_block": [
                        [
                            20,
                            "    - name: GitHub env variables\n"
                        ],
                        [
                            21,
                            "      run: |\n"
                        ],
                        [
                            22,
                            "        echo \"$GITHUB_API_URL\"\n"
                        ],
                        [
                            23,
                            "        echo \"$GITHUB_REPOSITORY\"\n"
                        ],
                        [
                            24,
                            "        echo \"$GITHUB_SHA\"\n"
                        ],
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        20,
                        26
                    ],
                    "resource": "jobs(build).steps[1](GitHub env variables)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ShellInjection",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_2",
                    "bc_check_id": null,
                    "check_name": "Ensure run commands are not vulnerable to shell injection",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/checkout@v2",
                            "__startline__": 25,
                            "__endline__": 27
                        }
                    },
                    "code_block": [
                        [
                            25,
                            "    - uses: actions/checkout@v2\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        25,
                        28
                    ],
                    "resource": "jobs(build).steps[2]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ShellInjection",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_2",
                    "bc_check_id": null,
                    "check_name": "Ensure run commands are not vulnerable to shell injection",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Build Docker image",
                            "run": "docker build -t super-sast-action:0.4 .",
                            "__startline__": 27,
                            "__endline__": 30
                        }
                    },
                    "code_block": [
                        [
                            27,
                            "    - name: Build Docker image\n"
                        ],
                        [
                            28,
                            "      run: docker build -t super-sast-action:0.4 .\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        27,
                        31
                    ],
                    "resource": "jobs(build).steps[3](Build Docker image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ShellInjection",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_2",
                    "bc_check_id": null,
                    "check_name": "Ensure run commands are not vulnerable to shell injection",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "name": "Run Docker Image",
                            "run": "docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n",
                            "__startline__": 30,
                            "__endline__": 34
                        }
                    },
                    "code_block": [
                        [
                            30,
                            "    - name: Run Docker Image\n"
                        ],
                        [
                            31,
                            "      run: |\n"
                        ],
                        [
                            32,
                            "        docker run --name super-sast-artifact -v $PWD:/code -e M2_HOME=/code -e HOME=/code -e GITHUB_API_URL=${{ github.api_url }} -e GITHUB_REPOSITORY=${{ github.repository }} -e GITHUB_SHA=${{ github.sha }} -e INPUT_REPO_TOKEN=${{ github.token }} -w /code super-sast-action:0.4\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        30,
                        35
                    ],
                    "resource": "jobs(build).steps[4](Run Docker Image)",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ShellInjection",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                },
                {
                    "check_id": "CKV_GHA_2",
                    "bc_check_id": null,
                    "check_name": "Ensure run commands are not vulnerable to shell injection",
                    "check_result": {
                        "result": "PASSED",
                        "results_configuration": {
                            "uses": "actions/upload-artifact@v3",
                            "with": {
                                "name": "super-sast-artifact",
                                "path": "super-sast.log\nlog_dir/\n",
                                "__startline__": 36,
                                "__endline__": 40
                            },
                            "__startline__": 34,
                            "__endline__": 40
                        }
                    },
                    "code_block": [
                        [
                            34,
                            "    - uses: actions/upload-artifact@v3\n"
                        ],
                        [
                            35,
                            "      with:\n"
                        ],
                        [
                            36,
                            "        name: super-sast-artifact\n"
                        ],
                        [
                            37,
                            "        path: |\n"
                        ],
                        [
                            38,
                            "          super-sast.log\n"
                        ],
                        [
                            39,
                            "          log_dir/\n"
                        ]
                    ],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        34,
                        41
                    ],
                    "resource": "jobs(build).steps[5]",
                    "evaluations": null,
                    "check_class": "checkov.github_actions.checks.job.ShellInjection",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        "build"
                    ],
                    "workflow_name": "Test"
                }
            ],
            "failed_checks": [
                {
                    "check_id": "CKV2_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure top-level permissions are not set to write-all",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "permissions"
                        ]
                    },
                    "code_block": [],
                    "file_path": "/.github/workflows/test.yml",
                    "file_abs_path": "/code/.github/workflows/test.yml",
                    "repo_file_path": "/.github/workflows/test.yml",
                    "file_line_range": [
                        0,
                        1
                    ],
                    "resource": "permissions",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push"
                        ]
                    ],
                    "job": [
                        ""
                    ],
                    "workflow_name": "Test"
                }
            ],
            "skipped_checks": [],
            "parsing_errors": []
        },
        "summary": {
            "passed": 26,
            "failed": 1,
            "skipped": 0,
            "parsing_errors": 0,
            "resource_count": 0,
            "checkov_version": "2.2.327"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    }
]
